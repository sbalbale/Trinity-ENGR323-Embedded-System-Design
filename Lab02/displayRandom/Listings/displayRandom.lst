A51 MACRO ASSEMBLER  DISPLAYRANDOM                                                        02/24/2025 15:48:10 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\displayRandom.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE displayRandom.asm SET(SMALL) DEBUG PRINT(.\Listings\displayRandom.lst) 
                      OBJECT(.\Objects\displayRandom.obj) EP

LOC  OBJ            LINE     SOURCE

0000                   1                 ORG     0000h           
0000 0130              2                 AJMP    MAIN           
                       3     
0013                   4                 ORG     0013h          ; External Interrupt 1 vector
0013 01A6              5                 AJMP    EXT1_ISR           
                       6     
000B                   7                 ORG     000Bh          ; Timer 0 vector
000B 01D4              8                 AJMP    Timer0_ISR
                       9     
0030                  10                 ORG     0030h          
0030 758130           11     MAIN:       MOV     SP, #30h       
0033 758901           12                 MOV     TMOD, #01h     ; Timer 0, mode 1 (16-bit)
                      13     
                      14                 ; Timer 0 setup for 5ms (12 MHz clock)
0036 758CEC           15                 MOV     TH0, #0ECh     
0039 758A78           16                 MOV     TL0, #78h      
003C D28C             17                 SETB    TR0            
                      18     
                      19                 ; Initialize registers 
003E 7800             20                 MOV     R0, #00h      
0040 7900             21                 MOV     R1, #00h
0042 7A00             22                 MOV     R2, #00h
0044 7B00             23                 MOV     R3, #00h
0046 7C00             24                 MOV     R4, #00h      
0048 7D00             25                 MOV     R5, #00h      
004A 7E55             26                 MOV     R6, #55h      ; New seed value
004C 7F20             27                 MOV     R7, #32       ; More iterations for better entropy
                      28                 
                      29                 ; Enhanced seeding process
004E E58A             30     SeedLoop:   MOV     A, TL0        ; Get timer low byte
0050 6E               31                 XRL     A, R6         ; XOR with current seed
0051 33               32                 RLC     A             ; Rotate left
0052 258C             33                 ADD     A, TH0        ; Add timer high byte
0054 64A5             34                 XRL     A, #0A5h      ; XOR with different constant
0056 13               35                 RRC     A             ; Rotate right
0057 2E               36                 ADD     A, R6         ; Add previous seed
0058 645A             37                 XRL     A, #5Ah      ; XOR with another constant
005A FE               38                 MOV     R6, A         ; Store new seed
                      39                 
                      40                 ; Additional mixing
005B E58C             41                 MOV     A, TH0
005D 6E               42                 XRL     A, R6
005E 33               43                 RLC     A
005F F521             44                 MOV     21h, A        ; Store additional entropy
                      45                 
0061 DFEB             46                 DJNZ    R7, SeedLoop
                      47                 
0063 7F00             48                 MOV     R7, #0        
0065 752000           49                 MOV     20h, #00h     
                      50                 
                      51                 ; Setup External Interrupt 1
0068 D28A             52                 SETB    IT1           
006A D2AA             53                 SETB    EX1           
                      54                 
006C D2A9             55                 SETB    ET0           
006E D2AF             56                 SETB    EA            
                      57     
A51 MACRO ASSEMBLER  DISPLAYRANDOM                                                        02/24/2025 15:48:10 PAGE     2

0070                  58     MainLoop:   ; Rest of the main loop remains same
0070 E520             59                 MOV     A, 20h        
0072 70FC             60                 JNZ     MainLoop      
                      61                 
0074 ED               62                 MOV     A, R5
0075 04               63                 INC     A
0076 B41412           64                 CJNE    A, #20, SaveCount
0079 7400             65                 MOV     A, #00h  
                      66                 
007B E8               67                 MOV     A, R0
007C 2411             68                 ADD     A, #11h
007E F8               69                 MOV     R0, A
007F E9               70                 MOV     A, R1  
0080 2411             71                 ADD     A, #11h
0082 F9               72                 MOV     R1, A
0083 EA               73                 MOV     A, R2
0084 2411             74                 ADD     A, #11h
0086 FA               75                 MOV     R2, A
0087 EB               76                 MOV     A, R3
0088 2411             77                 ADD     A, #11h
008A FB               78                 MOV     R3, A
                      79                 
008B FD               80     SaveCount:  MOV     R5, A
008C 80E2             81                 SJMP    MainLoop
                      82     
                      83     ; Enhanced random number generator
008E EE               84     GetRandom:  MOV     A, R6         ; Get current seed
008F F5F0             85                 MOV     B, A          ; Save copy
0091 33               86                 RLC     A             ; Rotate left
0092 5002             87                 JNC     Skip1
0094 64B2             88                 XRL     A, #0B2h      ; Polynomial tap
0096 6521             89     Skip1:      XRL     A, 21h        ; Mix with stored entropy
0098 258A             90                 ADD     A, TL0        ; Add timer value
009A 6F               91                 XRL     A, R7         ; Mix with counter
009B 25F0             92                 ADD     A, B          ; Add original seed
009D FE               93                 MOV     R6, A         ; Save new seed
009E E521             94                 MOV     A, 21h        ; Update stored entropy
00A0 33               95                 RLC     A
00A1 6E               96                 XRL     A, R6
00A2 F521             97                 MOV     21h, A
00A4 0F               98                 INC     R7            
00A5 22               99                 RET
                     100                 
                     101     ; External Interrupt 1 - Switch to random mode
00A6 C0E0            102     EXT1_ISR:   PUSH    ACC
00A8 C0D0            103                 PUSH    PSW
                     104                 
00AA 752001          105                 MOV     20h, #01h     ; Switch to random mode
                     106     
                     107                 ; Generate first digit (1-9 to ensure number > 1000)
00AD 118E            108                 ACALL   GetRandom     
00AF 75F009          109                 MOV     B, #9         ; Divide by 9 to get 0-8
00B2 84              110                 DIV     AB            
00B3 E5F0            111                 MOV     A, B          ; Get remainder (0-8)
00B5 04              112                 INC     A             ; Add 1 to get 1-9
00B6 F8              113                 MOV     R0, A         ; Store first digit (1-9)
                     114                 
                     115                 ; Generate remaining digits (0-9)
00B7 118E            116                 ACALL   GetRandom     ; Second digit
00B9 75F00A          117                 MOV     B, #10        
00BC 84              118                 DIV     AB
00BD A9F0            119                 MOV     R1, B         
                     120                 
00BF 118E            121                 ACALL   GetRandom     ; Third digit
00C1 75F00A          122                 MOV     B, #10
00C4 84              123                 DIV     AB
A51 MACRO ASSEMBLER  DISPLAYRANDOM                                                        02/24/2025 15:48:10 PAGE     3

00C5 AAF0            124                 MOV     R2, B         
                     125                 
00C7 118E            126                 ACALL   GetRandom     ; Fourth digit
00C9 75F00A          127                 MOV     B, #10
00CC 84              128                 DIV     AB
00CD ABF0            129                 MOV     R3, B         
                     130                 
00CF D0D0            131                 POP     PSW
00D1 D0E0            132                 POP     ACC
00D3 32              133                 RETI
                     134     
                     135     ; Timer 0 ISR - Display refresh
00D4 C0E0            136     Timer0_ISR: PUSH    ACC            
00D6 C0D0            137                 PUSH    PSW
                     138     
                     139                 ; Reload timer for 5ms
00D8 758CEC          140                 MOV     TH0, #0ECh     
00DB 758A78          141                 MOV     TL0, #078h     
                     142                 
                     143                 ; Get current position and display digit
00DE EC              144                 MOV     A, R4          
00DF B40005          145                 CJNE    A, #00h, Try_Pos1
00E2 E8              146                 MOV     A, R0          ; Get leftmost digit (thousands)
00E3 D294            147                 SETB    P1.4           ; Enable digit 3
00E5 8013            148                 SJMP    Output_Digit
                     149     
00E7 B40105          150     Try_Pos1:   CJNE    A, #01h, Try_Pos2
00EA E9              151                 MOV     A, R1          ; Get hundreds digit
00EB D295            152                 SETB    P1.5           ; Enable digit 2
00ED 800B            153                 SJMP    Output_Digit
                     154     
00EF B40205          155     Try_Pos2:   CJNE    A, #02h, Try_Pos3
00F2 EA              156                 MOV     A, R2          ; Get tens digit
00F3 D296            157                 SETB    P1.6           ; Enable digit 1
00F5 8003            158                 SJMP    Output_Digit
                     159     
00F7 EB              160     Try_Pos3:   MOV     A, R3          ; Get ones digit
00F8 D297            161                 SETB    P1.7           ; Enable digit 0
                     162     
00FA                 163     Output_Digit:
00FA 540F            164                 ANL     A, #0Fh        ; Mask to keep only lower 4 bits
00FC F590            165                 MOV     P1, A          ; Output digit value to lower 4 bits
                     166     
                     167                 ; Update display position
00FE EC              168                 MOV     A, R4
00FF 04              169                 INC     A              
0100 B40401          170                 CJNE    A, #04h, Save_Pos
0103 E4              171                 CLR     A             
0104 FC              172     Save_Pos:   MOV     R4, A         
                     173     
0105 D0D0            174                 POP     PSW            
0107 D0E0            175                 POP     ACC
0109 32              176                 RETI
                     177     
                     178                 END
A51 MACRO ASSEMBLER  DISPLAYRANDOM                                                        02/24/2025 15:48:10 PAGE     4

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

ACC. . . . . . . .  D ADDR   00E0H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
EA . . . . . . . .  B ADDR   00A8H.7 A   
ET0. . . . . . . .  B ADDR   00A8H.1 A   
EX1. . . . . . . .  B ADDR   00A8H.2 A   
EXT1_ISR . . . . .  C ADDR   00A6H   A   
GETRANDOM. . . . .  C ADDR   008EH   A   
IT1. . . . . . . .  B ADDR   0088H.2 A   
MAIN . . . . . . .  C ADDR   0030H   A   
MAINLOOP . . . . .  C ADDR   0070H   A   
OUTPUT_DIGIT . . .  C ADDR   00FAH   A   
P1 . . . . . . . .  D ADDR   0090H   A   
PSW. . . . . . . .  D ADDR   00D0H   A   
SAVECOUNT. . . . .  C ADDR   008BH   A   
SAVE_POS . . . . .  C ADDR   0104H   A   
SEEDLOOP . . . . .  C ADDR   004EH   A   
SKIP1. . . . . . .  C ADDR   0096H   A   
SP . . . . . . . .  D ADDR   0081H   A   
TH0. . . . . . . .  D ADDR   008CH   A   
TIMER0_ISR . . . .  C ADDR   00D4H   A   
TL0. . . . . . . .  D ADDR   008AH   A   
TMOD . . . . . . .  D ADDR   0089H   A   
TR0. . . . . . . .  B ADDR   0088H.4 A   
TRY_POS1 . . . . .  C ADDR   00E7H   A   
TRY_POS2 . . . . .  C ADDR   00EFH   A   
TRY_POS3 . . . . .  C ADDR   00F7H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
